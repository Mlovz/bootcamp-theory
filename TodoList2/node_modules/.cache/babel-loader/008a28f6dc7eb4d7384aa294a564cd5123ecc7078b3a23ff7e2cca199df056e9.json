{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USERED\\\\Desktop\\\\bootkemp\\\\REACT\\\\TodoList2\\\\src\\\\components\\\\ToDoList\\\\ToDoList.jsx\",\n  _s = $RefreshSig$();\nimport styles from \"./ToDoList.module.css\";\nimport List from \"./List\";\nimport { useState } from \"react\";\nimport CategoryCopy from \"../../assets/Category copy.svg\";\nimport Filter from \"../../assets/Filter.svg\";\nimport Settings from \"../../assets/Setting.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ToDoList() {\n  _s();\n  let arrColor = [\"#984040\", \"#21BCFF\", \"#FF8C21\", \"#608B67\", \"#FDA386\"];\n  let [value, setValue] = useState(\"\");\n  let [tasks, setTasks] = useState([]);\n  let [activeColor, setActiveColor] = useState({\n    color: arrColor[0],\n    idx: 0\n  });\n  function handleInputChange(e) {\n    setValue(e.target.value.trim());\n  }\n  function addTask(e) {\n    e.preventDefault();\n    let newTask = {\n      id: tasks.length + 1,\n      text: value,\n      isCompleted: false,\n      color: activeColor.color\n    };\n    setTasks([...tasks, newTask]);\n    console.log(tasks);\n    setValue(\"\");\n  }\n  function onDelete(id) {\n    let newTasks = tasks.filter(item => item.id !== id);\n    setTasks(newTasks);\n  }\n  const onChangeColor = (color, index) => {\n    setActiveColor({\n      color,\n      idx: index\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.top_cont,\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: addTask,\n        className: styles.form,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0437\\u0430\\u0434\\u0430\\u0447\\u0443...\",\n          className: styles.form_inp,\n          type: \"text\",\n          value: value,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: styles.form_btn,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.cont_btns,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addTask,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: CategoryCopy,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\u0412\\u0441\\u0435: \", tasks.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addTask,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: Filter,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\u0410\\u043A\\u0442\\u0438\\u0432\\u043D\\u044B\\u0435: \", tasks.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addTask,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: Settings,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\u0417\\u0430\\u0432\\u0435\\u0440\\u0448\\u0435\\u043D\\u043D\\u044B\\u0435: \", tasks.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.colors_cont,\n        children: arrColor.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => onChangeColor(item, index),\n            style: {\n              background: `${item}`\n            },\n            className: `${styles.color_wrap} ${activeColor.idx === index && activeColor}`\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 37\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      onDelete: onDelete,\n      tasks: tasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n_s(ToDoList, \"INMSqnnJ8SCkuHoPJX7lrrB22bE=\");\n_c = ToDoList;\nexport default ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["styles","List","useState","CategoryCopy","Filter","Settings","jsxDEV","_jsxDEV","ToDoList","_s","arrColor","value","setValue","tasks","setTasks","activeColor","setActiveColor","color","idx","handleInputChange","e","target","trim","addTask","preventDefault","newTask","id","length","text","isCompleted","console","log","onDelete","newTasks","filter","item","onChangeColor","index","className","container","children","top_cont","onSubmit","form","placeholder","form_inp","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","form_btn","cont_btns","onClick","src","alt","colors_cont","map","style","background","color_wrap","_c","$RefreshReg$"],"sources":["C:/Users/USERED/Desktop/bootkemp/REACT/TodoList2/src/components/ToDoList/ToDoList.jsx"],"sourcesContent":["import styles from \"./ToDoList.module.css\"\r\nimport List from \"./List\"\r\nimport { useState } from \"react\"\r\nimport CategoryCopy from \"../../assets/Category copy.svg\"\r\nimport Filter from \"../../assets/Filter.svg\"\r\nimport Settings from \"../../assets/Setting.svg\"\r\n\r\nfunction ToDoList() {\r\n    let arrColor = [\r\n        \"#984040\",\"#21BCFF\",\"#FF8C21\",\"#608B67\",\"#FDA386\",\r\n    ]\r\n    let [value, setValue] = useState(\"\")\r\n    let [tasks, setTasks] = useState([])\r\n    let [activeColor, setActiveColor] = useState({\r\n        color: arrColor[0],\r\n        idx: 0,\r\n    })\r\n    function handleInputChange(e) {\r\n        setValue(e.target.value.trim())\r\n    }\r\n    function addTask(e) {\r\n        e.preventDefault()\r\n        let newTask = {\r\n            id: tasks.length + 1,\r\n            text: value,\r\n            isCompleted: false,\r\n            color: activeColor.color,\r\n        }\r\n        setTasks([...tasks, newTask])\r\n        console.log(tasks);\r\n        setValue(\"\")\r\n    }\r\n    function onDelete(id) {\r\n        let newTasks = tasks.filter((item) => item.id !== id)\r\n        setTasks(newTasks)\r\n    }\r\n    const onChangeColor = (color, index) => {\r\n        setActiveColor({ color, idx: index });\r\n    };\r\n    return ( \r\n        <div className={styles.container}>\r\n            <div className={styles.top_cont}>\r\n                <form onSubmit={addTask} className={styles.form}>\r\n                    <input\r\n                    placeholder=\"Введите задачу...\"\r\n                    className={styles.form_inp} \r\n                    type=\"text\"\r\n                    value={value}\r\n                    onChange={handleInputChange}\r\n                     />\r\n                    <button type=\"submit\" className={styles.form_btn}>Send</button>\r\n                </form>\r\n                <div className={styles.cont_btns}>\r\n                    <button onClick={addTask}>\r\n                        <img src={CategoryCopy} alt=\"\" />\r\n                        <span>Все: {tasks.length}</span>\r\n                    </button>\r\n                    <button onClick={addTask}>\r\n                        <img src={Filter} alt=\"\" />\r\n                        <span>Активные: {tasks.length}</span>\r\n                    </button>\r\n                    <button onClick={addTask}>\r\n                        <img src={Settings} alt=\"\" />\r\n                        <span>Завершенные: {tasks.length}</span>\r\n                    </button>\r\n                   \r\n                </div>\r\n                <div className={styles.colors_cont}>\r\n                        {\r\n                            arrColor.map((item, index) => {\r\n                                return (\r\n                                    <span key={index} onClick={() => onChangeColor(item, index)} style={{background: `${item}`}} className={`${styles.color_wrap} ${activeColor.idx === index && activeColor}`}></span>\r\n                                )\r\n                            })\r\n                        }\r\n                </div>\r\n            </div>\r\n            <List onDelete={onDelete} tasks={tasks} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToDoList"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}