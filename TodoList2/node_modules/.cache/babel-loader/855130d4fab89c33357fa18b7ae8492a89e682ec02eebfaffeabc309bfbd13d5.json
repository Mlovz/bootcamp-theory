{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USERED\\\\Desktop\\\\bootkemp\\\\REACT\\\\tasks\\u21161.2\\\\src\\\\components\\\\FAQ\\\\FAQ.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport styles from \"./FAQ.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FAQ = () => {\n  _s();\n  let arr = [{\n    question: \"Вопрос1\",\n    answer: \"Ответ1\",\n    id: 1\n  }, {\n    question: \"Вопрос2\",\n    answer: \"Ответ2\",\n    id: 2\n  }, {\n    question: \"Вопрос3\",\n    answer: \"Ответ3\",\n    id: 3\n  }];\n  let [question, setQuestion] = useState(arr);\n  let [answer, setAnswer] = useState(\"\");\n  function funAnswer(id) {\n    let answerObj = arr.find(item => item.id === id);\n    setAnswer(answerObj.answer);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.card,\n    children: [question.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => funAnswer(item.id),\n        children: item.question\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: answer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(FAQ, \"wyGUiGEVMnMmOCtfN3YPioUmmbQ=\");\n_c = FAQ;\nexport default FAQ;\nvar _c;\n$RefreshReg$(_c, \"FAQ\");","map":{"version":3,"names":["useState","styles","jsxDEV","_jsxDEV","FAQ","_s","arr","question","answer","id","setQuestion","setAnswer","funAnswer","answerObj","find","item","className","card","children","map","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/USERED/Desktop/bootkemp/REACT/tasks№1.2/src/components/FAQ/FAQ.jsx"],"sourcesContent":["import { useState } from \"react\"\r\nimport styles from \"./FAQ.module.css\"\r\n\r\nconst FAQ = () => {\r\n  let arr = [\r\n    {\r\n      question: \"Вопрос1\",\r\n      answer: \"Ответ1\",\r\n      id: 1,\r\n    },\r\n    {\r\n      question: \"Вопрос2\",\r\n      answer: \"Ответ2\",\r\n      id: 2,\r\n    },\r\n    {\r\n      question: \"Вопрос3\",\r\n      answer: \"Ответ3\",\r\n      id: 3,\r\n    },\r\n  ]\r\n  let [question, setQuestion] = useState(arr)\r\n  let [answer, setAnswer] = useState(\"\")\r\n  function funAnswer(id) { \r\n    let answerObj = arr.find((item) => item.id === id)\r\n    setAnswer(answerObj.answer)\r\n\r\n  }\r\n  return (\r\n    <div className={styles.card}>\r\n      {\r\n        question.map((item) => {\r\n            return (\r\n              <span onClick={() => funAnswer(item.id)} key={item.id}>{item.question}</span>\r\n            )\r\n        })\r\n      }\r\n      <p>{answer}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FAQ;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,IAAIC,GAAG,GAAG,CACR;IACEC,QAAQ,EAAE,SAAS;IACnBC,MAAM,EAAE,QAAQ;IAChBC,EAAE,EAAE;EACN,CAAC,EACD;IACEF,QAAQ,EAAE,SAAS;IACnBC,MAAM,EAAE,QAAQ;IAChBC,EAAE,EAAE;EACN,CAAC,EACD;IACEF,QAAQ,EAAE,SAAS;IACnBC,MAAM,EAAE,QAAQ;IAChBC,EAAE,EAAE;EACN,CAAC,CACF;EACD,IAAI,CAACF,QAAQ,EAAEG,WAAW,CAAC,GAAGV,QAAQ,CAACM,GAAG,CAAC;EAC3C,IAAI,CAACE,MAAM,EAAEG,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,SAASY,SAASA,CAACH,EAAE,EAAE;IACrB,IAAII,SAAS,GAAGP,GAAG,CAACQ,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACN,EAAE,KAAKA,EAAE,CAAC;IAClDE,SAAS,CAACE,SAAS,CAACL,MAAM,CAAC;EAE7B;EACA,oBACEL,OAAA;IAAKa,SAAS,EAAEf,MAAM,CAACgB,IAAK;IAAAC,QAAA,GAExBX,QAAQ,CAACY,GAAG,CAAEJ,IAAI,IAAK;MACnB,oBACEZ,OAAA;QAAMiB,OAAO,EAAEA,CAAA,KAAMR,SAAS,CAACG,IAAI,CAACN,EAAE,CAAE;QAAAS,QAAA,EAAgBH,IAAI,CAACR;MAAQ,GAAvBQ,IAAI,CAACN,EAAE;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAuB,CAAC;IAEnF,CAAC,CAAC,eAEJrB,OAAA;MAAAe,QAAA,EAAIV;IAAM;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEV,CAAC;AAACnB,EAAA,CArCID,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AAuCT,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}