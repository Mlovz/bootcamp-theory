{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USERED\\\\Desktop\\\\bootkemp\\\\REACT\\\\tasks\\u21161.1\\\\src\\\\App.jsx\";\nimport \"./App.css\";\nimport React, { useState } from \"react\";\nimport BusinessCard from \"./components/BusinessCard/BusinessCard\";\nimport UserProfile from \"./components/UserProfile/UserProfile\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(UserProfile, {\n      firstName: \"Salahuddin\",\n      lastName: \"Azhigov\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_c = App;\nexport default App;\n\n/* \r\n// Простая визитка: \r\n// Создайте компонент BusinessCard, который принимает пропсы name, jobTitle, и company и отображает их в виде визитки.\r\n\r\n// Профиль пользователя: \r\n// Создайте компонент UserProfile, который принимает пропсы firstName, lastName, age, и bio. Отобразите информацию о пользователе в формате профиля.\r\n\r\n// Список товаров: \r\n// Создайте компонент Product, который принимает пропсы name, price, и description. Затем создайте компонент ProductList, который принимает массив объектов продуктов и рендерит список Product.\r\n\r\n// Кнопка с иконкой: \r\n// Создайте компонент IconButton, который принимает пропсы icon и label. Кнопка должна отображать иконку (например, эмодзи) и текст.\r\n\r\n// Карточка новости: \r\n// Создайте компонент NewsCard, который принимает пропсы title, author, date, и content. Отобразите новость в формате карточки.\r\n\r\n// Карточка фильма: \r\n// Создайте компонент MovieCard, который принимает пропсы title, director, year, и posterUrl. Отобразите информацию о фильме вместе с изображением постера.\r\n\r\n// Галерея изображений: \r\n// Создайте компонент ImageGallery, который принимает пропс images — массив URL изображений, и отображает их в виде галереи.\r\n\r\n// Таблица пользователей: \r\n// Создайте компонент UserTable, который принимает массив объектов пользователей с полями id, name, и email. Отобразите пользователей в таблице.\r\n\r\n// Страница книги: \r\n// Создайте компонент BookPage, который принимает пропсы title, author, pages, и summary. Отобразите информацию о книге в формате страницы.\r\n\r\n// Список задач: \r\n// Создайте компонент TaskList, который принимает массив задач с полями title и completed. Отобразите список задач с отметкой выполнены они или нет.\r\n\r\n// Список контактов: \r\n// Создайте компонент ContactList, который принимает массив объектов с именем и номером телефона. Отобразите список контактов.\r\n\r\n// Карточка пользователя с аватаром: \r\n// Создайте компонент UserCard, который принимает пропсы name, email, и avatarUrl. Отобразите карточку пользователя с аватаром.\r\n\r\n// Карточка товара с рейтингом: \r\n// Создайте компонент ProductCard, который принимает name, price, rating, и imageUrl. Отобразите товар с изображением и звездным рейтингом.\r\n\r\n// Список услуг: \r\n// Создайте компонент ServiceList, который принимает массив услуг с полями name и description. Отобразите список услуг.\r\n\r\n// Меню ресторана: \r\n// Создайте компонент MenuItem, который принимает пропсы name, price, и description. Создайте компонент Menu, который принимает массив элементов меню и отображает их.\r\n\r\n// Профиль компании: \r\n// Создайте компонент CompanyProfile, который принимает пропсы name, industry, location, и description. Отобразите информацию о компании.\r\n\r\n// Календарь событий: \r\n// Создайте компонент Event, который принимает title, date, и location. Создайте компонент EventList, который принимает массив событий и отображает их.\r\n\r\n// Отзывы клиентов: \r\n// Создайте компонент Testimonial, который принимает пропсы name, feedback, и date. Создайте компонент TestimonialsList, который отображает список отзывов.\r\n\r\n// Карточка приложения: \r\n// Создайте компонент AppCard, который принимает пропсы appName, developer, downloads, и iconUrl. Отобразите информацию об приложении.\r\n\r\n// Список вопросов и ответов: \r\n// Создайте компонент FAQ, который принимает массив объектов с полями question и answer, и отображает вопросы с ответами. */\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BusinessCard","UserProfile","jsxDEV","_jsxDEV","Fragment","_Fragment","App","children","firstName","lastName","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/USERED/Desktop/bootkemp/REACT/tasks№1.1/src/App.jsx"],"sourcesContent":["import \"./App.css\"\r\nimport React, { useState } from \"react\"\r\nimport BusinessCard from \"./components/BusinessCard/BusinessCard\"\r\nimport UserProfile from \"./components/UserProfile/UserProfile\"\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        {/* <BusinessCard name=\"John Doe\" jobTitle=\"Developer\" company=\"speedCompany\" /> */}\r\n        <UserProfile firstName=\"Salahuddin\" lastName=\"Azhigov\" />\r\n        </>\r\n    )\r\n}   \r\n\r\nexport default App\r\n\r\n\r\n/* \r\n// Простая визитка: \r\n// Создайте компонент BusinessCard, который принимает пропсы name, jobTitle, и company и отображает их в виде визитки.\r\n\r\n// Профиль пользователя: \r\n// Создайте компонент UserProfile, который принимает пропсы firstName, lastName, age, и bio. Отобразите информацию о пользователе в формате профиля.\r\n\r\n// Список товаров: \r\n// Создайте компонент Product, который принимает пропсы name, price, и description. Затем создайте компонент ProductList, который принимает массив объектов продуктов и рендерит список Product.\r\n\r\n// Кнопка с иконкой: \r\n// Создайте компонент IconButton, который принимает пропсы icon и label. Кнопка должна отображать иконку (например, эмодзи) и текст.\r\n\r\n// Карточка новости: \r\n// Создайте компонент NewsCard, который принимает пропсы title, author, date, и content. Отобразите новость в формате карточки.\r\n\r\n// Карточка фильма: \r\n// Создайте компонент MovieCard, который принимает пропсы title, director, year, и posterUrl. Отобразите информацию о фильме вместе с изображением постера.\r\n\r\n// Галерея изображений: \r\n// Создайте компонент ImageGallery, который принимает пропс images — массив URL изображений, и отображает их в виде галереи.\r\n\r\n// Таблица пользователей: \r\n// Создайте компонент UserTable, который принимает массив объектов пользователей с полями id, name, и email. Отобразите пользователей в таблице.\r\n\r\n// Страница книги: \r\n// Создайте компонент BookPage, который принимает пропсы title, author, pages, и summary. Отобразите информацию о книге в формате страницы.\r\n\r\n// Список задач: \r\n// Создайте компонент TaskList, который принимает массив задач с полями title и completed. Отобразите список задач с отметкой выполнены они или нет.\r\n\r\n// Список контактов: \r\n// Создайте компонент ContactList, который принимает массив объектов с именем и номером телефона. Отобразите список контактов.\r\n\r\n// Карточка пользователя с аватаром: \r\n// Создайте компонент UserCard, который принимает пропсы name, email, и avatarUrl. Отобразите карточку пользователя с аватаром.\r\n\r\n// Карточка товара с рейтингом: \r\n// Создайте компонент ProductCard, который принимает name, price, rating, и imageUrl. Отобразите товар с изображением и звездным рейтингом.\r\n\r\n// Список услуг: \r\n// Создайте компонент ServiceList, который принимает массив услуг с полями name и description. Отобразите список услуг.\r\n\r\n// Меню ресторана: \r\n// Создайте компонент MenuItem, который принимает пропсы name, price, и description. Создайте компонент Menu, который принимает массив элементов меню и отображает их.\r\n\r\n// Профиль компании: \r\n// Создайте компонент CompanyProfile, который принимает пропсы name, industry, location, и description. Отобразите информацию о компании.\r\n\r\n// Календарь событий: \r\n// Создайте компонент Event, который принимает title, date, и location. Создайте компонент EventList, который принимает массив событий и отображает их.\r\n\r\n// Отзывы клиентов: \r\n// Создайте компонент Testimonial, который принимает пропсы name, feedback, и date. Создайте компонент TestimonialsList, который отображает список отзывов.\r\n\r\n// Карточка приложения: \r\n// Создайте компонент AppCard, который принимает пропсы appName, developer, downloads, и iconUrl. Отобразите информацию об приложении.\r\n\r\n// Список вопросов и ответов: \r\n// Создайте компонент FAQ, который принимает массив объектов с полями question и answer, и отображает вопросы с ответами. */"],"mappings":";AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,wCAAwC;AACjE,OAAOC,WAAW,MAAM,sCAAsC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAI9D,SAASC,GAAGA,CAAA,EAAG;EAIX,oBACIH,OAAA,CAAAE,SAAA;IAAAE,QAAA,eAEAJ,OAAA,CAACF,WAAW;MAACO,SAAS,EAAC,YAAY;MAACC,QAAQ,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBACvD,CAAC;AAEX;AAACC,EAAA,GAVQR,GAAG;AAYZ,eAAeA,GAAG;;AAGlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3DA,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}