// 1. Объявите функцию greet, которая выводит "Hello, World!".
// 2. Объявите функцию greet, которая принимает параметр name и выводит "Hello, [name]!".
// 3. Объявите функцию square, которая принимает число и возвращает его квадрат.
// 4. Объявите функцию add, которая принимает два числа и возвращает их сумму.
// 5. Объявите функцию multiply, которая принимает два параметра и умножает их, второй параметр должен иметь значение по умолчанию 1.
// 6. Объявите функцию factorial, которая вычисляет факториал числа.
// 7. Создайте анонимную функцию и присвойте её переменной sum, которая принимает два числа и возвращает их сумму.
// 8. Перепишите функцию greet, используя стрелочную функцию.
// 9. Объявите функцию applyOperation, которая принимает два числа и функцию, и применяет эту функцию к числам.
// 10. Объявите функцию createMultiplier, которая принимает число и возвращает функцию, умножающую на это число.
// 11. Объявите функцию counter, которая возвращает функцию, увеличивающую внутреннюю переменную на 1 и возвращающую её значение.
// 12. Объявите функцию greet, которая принимает параметр name. Вызовите её, используя метод call.
// 13. Объявите функцию sum, которая принимает два числа. Вызовите её, используя метод apply.
// 14. Объявите функцию multiply, которая принимает два числа. Создайте новую функцию, привязывая одно из значений, используя метод bind.
// 15. Объявите функцию printPerson, которая принимает объект person с свойствами name и age и выводит их.
// 16. Объявите функцию updateAge, которая принимает объект person и новое значение age, и обновляет возраст у объекта.
// 17. Объявите функцию getFirstElement, которая принимает массив и возвращает его первый элемент.
// 18. Объявите функцию createBankAccount, которая возвращает объект с методами deposit и withdraw, инкапсулируя состояние счёта.
// 19. Объявите функцию isNumber, которая принимает аргумент и возвращает true, если это число, и false в противном случае.
// 20. Объявите функцию createPerson, которая принимает name и age и возвращает объект с этими свойствами.
// 21. Объявите функцию checkAge, которая принимает возраст и возвращает сообщение "Adult" или "Minor" в зависимости от значения.
// 22. Объявите функцию isEven, которая принимает число и возвращает true, если оно чётное, и false в противном случае.
// 23. Объявите функцию getDayName, которая принимает число от 1 до 7 и возвращает название дня недели.
// 24. Объявите функцию safeDivide, которая принимает два числа и возвращает их частное. Если делитель равен нулю, выбрасывается ошибка.
// 25. Объявите функцию performOperation, которая принимает два числа и функцию обратного вызова для выполнения операции над этими числами.
// 26. Объявите функцию delayedMessage, которая принимает сообщение и задержку, и выводит сообщение с использованием setTimeout.
// 27. Объявите функцию repeatMessage, которая принимает сообщение и интервал, и выводит сообщение каждые заданные миллисекунды с использованием setInterval.
// 28. Объявите функцию fetchData, которая возвращает промис, который разрешается через 2 секунды с сообщением "Data fetched".
// 29. Объявите асинхронную функцию asyncFetchData, которая использует await для ожидания выполнения промиса.
// 30. Объявите функцию convertToString, которая принимает число и возвращает его строковое представление.
// 31. Объявите функцию isString, которая принимает аргумент и возвращает true, если это строка, и false в противном случае.
// 32. Объявите функцию getFullName, которая принимает объект person с свойствами firstName и lastName и возвращает полное имя.
// 33. Объявите функцию swap, которая принимает массив из двух элементов и возвращает массив с этими элементами в обратном порядке.
// 34. Объявите функцию sumAll, которая принимает произвольное количество чисел и возвращает их сумму.
// 35. Объявите функцию combineArrays, которая принимает два массива и возвращает один объединённый массив.
// 36. Объявите функцию convertToNumber, которая принимает строку и возвращает её числовое значение.
// 37. Объявите функцию isTruthy, которая принимает аргумент и возвращает его булевое значение.
// 38. Объявите функцию hasProperty, которая принимает объект и имя свойства и возвращает true, если свойство существует, и false в противном случае.
// 39. Объявите функцию mergeObjects, которая принимает два объекта и возвращает один объединённый объект.
// 40. Объявите функцию getMinMax, которая принимает два числа и возвращает объект с их минимальным и максимальным значением.
// 41. Объявите функцию isNullOrUndefined, которая принимает аргумент и возвращает true, если он равен null или undefined, и false в противном случае.
// 42. Объявите функцию booleanToString, которая принимает булево значение и возвращает его строковое представление.
// 43. Объявите функцию stringToArray, которая принимает строку и возвращает массив её символов.
// 44. Объявите функцию concatStrings, которая принимает две строки и возвращает одну объединённую строку.
// 45. Объявите функцию getSubstring, которая принимает строку и два числа (начальный индекс и длину) и возвращает подстроку.
// 46. Объявите функцию replaceChar, которая принимает строку, символ для замены и новый символ и возвращает изменённую строку.
// 47. Объявите функцию isLengthGreaterThan, которая принимает строку и число и возвращает true, если длина строки больше этого числа, и false в противном случае.
// 48. Объявите функцию containsSubstring, которая принимает строку и подстроку и возвращает true, если строка содержит подстроку, и false в противном случае.
// 49. Объявите функцию trimSpaces, которая принимает строку и возвращает строку без начальных и конечных пробелов.
// 50. Объявите функцию isEven, которая принимает число и возвращает true, если оно чётное, и false в противном случае.