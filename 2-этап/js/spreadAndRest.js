// 1. Создайте новый массив, объединив два существующих массива с помощью оператора spread.
// 2. Передайте аргументы функции с помощью оператора spread.
// 3. Скопируйте объект с помощью оператора spread.
// 4. Используйте оператор spread для создания копии массива в обратном порядке.
// 5. Передайте часть элементов массива как аргументы функции с использованием оператора spread.
// 6. Используйте оператор spread для объединения нескольких объектов в один.
// 7. Напишите функцию, которая будет принимать любое количество аргументов и выводить их сумму, используя оператор rest.
// 8. Создайте функцию, которая принимает первый аргумент как отдельный параметр, а остальные - с помощью оператора rest.
// 9. Используйте оператор rest для подсчета среднего значения всех переданных аргументов.
// 10. Напишите функцию, которая принимает массив чисел и возвращает их сумму, используя оператор rest.
// 11. Создайте функцию, которая принимает произвольное количество строк и объединяет их в одну строку с помощью оператора rest.
// 12. Используйте оператор rest для получения всех переданных аргументов в виде массива внутри функции.
// 13. Напишите функцию, которая принимает два аргумента - объекты, и возвращает новый объект, объединяя оба с помощью оператора spread.
// 14. Создайте функцию, которая принимает массив чисел и возвращает наименьшее число, используя оператор rest и оператор spread.
// 15. Напишите функцию, которая принимает произвольное количество объектов и объединяет их в один с помощью оператора rest и оператора spread.
// 16. Напишите функцию, которая принимает два массива и возвращает новый массив, содержащий все элементы обоих массивов, без повторений.
// 17. Создайте функцию, которая принимает объект и возвращает копию этого объекта с измененным значением определенного свойства с использованием оператора spread.
// 18. Напишите функцию, которая принимает массив объектов и возвращает новый массив, содержащий только определенные свойства объектов, используя оператор spread.
// 19. Напишите функцию, которая принимает имя пользователя в качестве первого аргумента, а остальные аргументы - его увлечения. Функция должна выводить сообщение о том, что имя пользователя увлекается теми или иными вещами.
// 20. Создайте функцию, которая принимает неопределенное количество строк и возвращает новую строку, содержащую их все, разделенные запятыми, с использованием оператора rest.
// 21. Напишите функцию, которая принимает аргументы различных типов (числа, строки, булевы значения) с помощью оператора rest и выводит их типы.
// 22. Создайте функцию, которая принимает произвольное количество массивов и возвращает новый массив, содержащий уникальные элементы из всех переданных массивов.
// 23. Напишите функцию, которая принимает произвольное количество объектов и возвращает новый объект, содержащий все свойства из переданных объектов, с приоритетом более поздних объектов в аргументах.
// 24. Создайте функцию, которая принимает массив объектов и возвращает новый массив с уникальными значениями определенного свойства всех объектов.
// 25. Напишите функцию, которая принимает произвольное количество массивов чисел и возвращает массив, содержащий минимальное и максимальное значение из каждого переданного массива, используя оператор rest и оператор spread.
// 26. Напишите функцию, которая принимает произвольное количество массивов и объединяет все составляющие массивы в один без повторений.
// 27. Создайте функцию, которая принимает произвольное количество объектов и возвращает новый объект, содержащий уникальные свойства из всех переданных объектов.
// 28. Напишите функцию, которая принимает массив чисел и произвольное количество чисел в качестве аргументов и возвращает новый массив, содержащий все числа вместе с переданными дополнительными числами.
// 29. Создайте функцию, которая принимает два объекта и возвращает новый объект, состоящий из свойств обоих объектов, при этом свойства из второго объекта перезаписывают свойства из первого объекта в случае конфликта.
// 30. Напишите функцию, которая принимает несколько массивов и возвращает новый массив, содержащий в себе все элементы из переданных массивов, но без повторений.
