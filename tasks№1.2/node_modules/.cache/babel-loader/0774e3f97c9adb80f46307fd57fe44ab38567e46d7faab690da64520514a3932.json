{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USERED\\\\Desktop\\\\bootkemp\\\\REACT\\\\test2\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from \"./App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(/*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 5\n}, this));\n\n/* // 1. Создание компонента профиля пользователя\n// Задание: Создайте компонент UserProfile, который принимает через пропсы имя, возраст и ссылку на аватар пользователя. Отобразите эту информацию в виде карточки с модульными стилями.\n\n\n// 2. Компонент кнопки с настраиваемыми стилями\n// Задание: Создайте компонент Button, который принимает через пропсы текст кнопки и функцию, вызываемую при клике. Используйте модульные стили для оформления кнопки.\n\n\n// 3. Карточка продукта с модульными стилями\n// Задание: Создайте компонент ProductCard, который принимает через пропсы название, описание и изображение продукта. Используйте модульные стили для оформления карточки.\n\n\n// 4. Заголовок с динамическим текстом\n// Задание: Создайте компонент Header, который принимает через пропс текст заголовка и отображает его с использованием модульных стилей.\n\n\n// 5. Компонент с информацией о погоде\n// Задание: Создайте компонент WeatherInfo, который принимает через пропсы текущую температуру, город и описание погоды. Оформите компонент с помощью модульных стилей.\n\n\n// 6. Карточка с отзывом пользователя\n// Задание: Создайте компонент ReviewCard, который принимает через пропсы имя пользователя, текст отзыва и рейтинг. Используйте модульные стили для оформления карточки.\n\n\n// 7. Логотип с изменяемым размером\n// Задание: Создайте компонент Logo, который принимает через пропсы URL логотипа и его размер (ширину и высоту). Оформите компонент с помощью модульных стилей, чтобы можно было легко менять размер логотипа.\n\n\n// 8. Счетчик с настраиваемым шагом\n// Задание: Создайте компонент Counter, который принимает через пропсы начальное значение и шаг увеличения. Используйте модульные стили для оформления кнопок и отображения значения.\n\n\n// 9. Информационный блок с изображением\n// Задание: Создайте компонент InfoBlock, который принимает через пропсы заголовок, текст и изображение. Оформите блок с помощью модульных стилей.\n\n\n// 10. Текстовый блок с изменяемым цветом фона\n// Задание: Создайте компонент TextBlock, который принимает через пропсы текст и цвет фона. Оформите компонент с помощью модульных стилей и отображайте текст на указанном фоне. */","map":{"version":3,"names":["React","ReactDOM","App","jsxDEV","_jsxDEV","root","createRoot","document","getElementById","render","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/USERED/Desktop/bootkemp/REACT/test2/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from \"./App\";\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <App />\n);\n\n/* // 1. Создание компонента профиля пользователя\n// Задание: Создайте компонент UserProfile, который принимает через пропсы имя, возраст и ссылку на аватар пользователя. Отобразите эту информацию в виде карточки с модульными стилями.\n\n\n// 2. Компонент кнопки с настраиваемыми стилями\n// Задание: Создайте компонент Button, который принимает через пропсы текст кнопки и функцию, вызываемую при клике. Используйте модульные стили для оформления кнопки.\n\n\n// 3. Карточка продукта с модульными стилями\n// Задание: Создайте компонент ProductCard, который принимает через пропсы название, описание и изображение продукта. Используйте модульные стили для оформления карточки.\n\n\n// 4. Заголовок с динамическим текстом\n// Задание: Создайте компонент Header, который принимает через пропс текст заголовка и отображает его с использованием модульных стилей.\n\n\n// 5. Компонент с информацией о погоде\n// Задание: Создайте компонент WeatherInfo, который принимает через пропсы текущую температуру, город и описание погоды. Оформите компонент с помощью модульных стилей.\n\n\n// 6. Карточка с отзывом пользователя\n// Задание: Создайте компонент ReviewCard, который принимает через пропсы имя пользователя, текст отзыва и рейтинг. Используйте модульные стили для оформления карточки.\n\n\n// 7. Логотип с изменяемым размером\n// Задание: Создайте компонент Logo, который принимает через пропсы URL логотипа и его размер (ширину и высоту). Оформите компонент с помощью модульных стилей, чтобы можно было легко менять размер логотипа.\n\n\n// 8. Счетчик с настраиваемым шагом\n// Задание: Создайте компонент Counter, который принимает через пропсы начальное значение и шаг увеличения. Используйте модульные стили для оформления кнопок и отображения значения.\n\n\n// 9. Информационный блок с изображением\n// Задание: Создайте компонент InfoBlock, который принимает через пропсы заголовок, текст и изображение. Оформите блок с помощью модульных стилей.\n\n\n// 10. Текстовый блок с изменяемым цветом фона\n// Задание: Создайте компонент TextBlock, который принимает через пропсы текст и цвет фона. Оформите компонент с помощью модульных стилей и отображайте текст на указанном фоне. */"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGxB,MAAMC,IAAI,GAAGJ,QAAQ,CAACK,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,cACPL,OAAA,CAACF,GAAG;EAAAQ,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAE,CACV,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}