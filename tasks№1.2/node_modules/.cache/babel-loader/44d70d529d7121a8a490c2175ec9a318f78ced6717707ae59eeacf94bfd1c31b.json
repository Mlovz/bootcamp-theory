{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USERED\\\\Desktop\\\\bootkemp\\\\REACT\\\\tasks\\u21162\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from \"./App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(/*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 5\n}, this));\n\n// 1. Создайте компонент счетчика с кнопками для увеличения и уменьшения значения.\n// Используйте useState для управления значением счетчика.\n\n// Создайте компонент с текстом и кнопкой \"Показать/Скрыть\".\n// При нажатии на кнопку текст должен показываться или скрываться с использованием условного рендеринга.\n\n// Создайте компонент с текстом и кнопками для изменения цвета текста (например, на красный, синий, зеленый).\n// Используйте useState для хранения текущего цвета и условный рендеринг для изменения стиля.\n\n// Создайте компонент с кнопкой, которая меняет цвет фона страницы при нажатии.\n// Используйте useState для хранения состояния текущего цвета фона.\n\n// Создайте простой список задач с возможностью добавить одну новую задачу через поле ввода.\n// Используйте useState для управления списком задач.\n\n// Создайте компонент с кнопкой, которая меняет свое состояние на \"Включено\" или \"Выключено\" при нажатии.\n// Используйте условный рендеринг для отображения текущего состояния.\n\n// Создайте кнопку, которая считает, сколько раз на нее нажали, и отображает это число.\n// Используйте useState для хранения и обновления количества кликов.\n\n// Создайте форму с текстовым полем, где введенный текст отображается ниже поля ввода в режиме реального времени.\n// Используйте useState для хранения значения поля ввода.\n\n// Создайте компонент, который показывает сообщение \"Добро пожаловать\" при нажатии кнопки \"Показать\".\n// Используйте условный рендеринг для отображения сообщения.\n\n// Создайте компонент с текстом и кнопками \"Увеличить\" и \"Уменьшить\" для изменения размера шрифта текста.\n// Используйте useState для управления размером шрифта.","map":{"version":3,"names":["React","ReactDOM","App","jsxDEV","_jsxDEV","root","createRoot","document","getElementById","render","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/USERED/Desktop/bootkemp/REACT/tasks№2/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from \"./App\";\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <App />\n);\n\n// 1. Создайте компонент счетчика с кнопками для увеличения и уменьшения значения.\n// Используйте useState для управления значением счетчика.\n\n// Создайте компонент с текстом и кнопкой \"Показать/Скрыть\".\n// При нажатии на кнопку текст должен показываться или скрываться с использованием условного рендеринга.\n\n// Создайте компонент с текстом и кнопками для изменения цвета текста (например, на красный, синий, зеленый).\n// Используйте useState для хранения текущего цвета и условный рендеринг для изменения стиля.\n\n// Создайте компонент с кнопкой, которая меняет цвет фона страницы при нажатии.\n// Используйте useState для хранения состояния текущего цвета фона.\n\n// Создайте простой список задач с возможностью добавить одну новую задачу через поле ввода.\n// Используйте useState для управления списком задач.\n\n// Создайте компонент с кнопкой, которая меняет свое состояние на \"Включено\" или \"Выключено\" при нажатии.\n// Используйте условный рендеринг для отображения текущего состояния.\n\n// Создайте кнопку, которая считает, сколько раз на нее нажали, и отображает это число.\n// Используйте useState для хранения и обновления количества кликов.\n\n// Создайте форму с текстовым полем, где введенный текст отображается ниже поля ввода в режиме реального времени.\n// Используйте useState для хранения значения поля ввода.\n\n// Создайте компонент, который показывает сообщение \"Добро пожаловать\" при нажатии кнопки \"Показать\".\n// Используйте условный рендеринг для отображения сообщения.\n\n// Создайте компонент с текстом и кнопками \"Увеличить\" и \"Уменьшить\" для изменения размера шрифта текста.\n// Используйте useState для управления размером шрифта."],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGxB,MAAMC,IAAI,GAAGJ,QAAQ,CAACK,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,cACPL,OAAA,CAACF,GAAG;EAAAQ,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAE,CACV,CAAC;;AAED;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}