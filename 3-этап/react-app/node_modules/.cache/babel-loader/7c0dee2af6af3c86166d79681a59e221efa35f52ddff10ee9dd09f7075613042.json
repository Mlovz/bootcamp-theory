{"ast":null,"code":"var _jsxFileName = \"/home/mlovz/Desktop/bootcamp-theory/3-\\u044D\\u0442\\u0430\\u043F/react-app/src/components/Header/Header.jsx\";\nimport React, { useState } from \"react\";\n\n// События\n// Условный рендеринг\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Header = ({\n  children\n}) => {\n  // const [isLoggeg, setIsLogged] = useState(false)\n\n  // const onOnLogged = () => {\n  //   setIsLogged(true)\n  // }\n\n  // console.log(isLoggeg);\n\n  return /*#__PURE__*/_jsxDEV(\"header\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Header","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/mlovz/Desktop/bootcamp-theory/3-этап/react-app/src/components/Header/Header.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\n// События\n// Условный рендеринг\n\nconst Header = ({ children }) => {\n  // const [isLoggeg, setIsLogged] = useState(false)\n  \n  // const onOnLogged = () => {\n  //   setIsLogged(true)\n  // }\n\n  // console.log(isLoggeg);\n  \n\n  return (\n    <header>\n      {/* <h1>My App</h1>\n      <button onClick={onOnLogged}>Войти</button>\n      {isShow && <h1>show content</h1>}\n      {isLoggeg === true ? (\n        <ul>\n          <li>Admin</li>\n          <li>Users</li>\n          <li>Tickets</li>\n        </ul>\n      ) : (\n        <ul>\n          <li>Home</li>\n          <li>About</li>\n          <li>Contact</li>\n        </ul>\n      )}\n\n      <h2>{children}</h2> */}\n    </header>\n  );\n};\n\nexport default Header;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAEvC;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,MAAM,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAC/B;;EAEA;EACA;EACA;;EAEA;;EAGA,oBACEF,OAAA;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAmBQ,CAAC;AAEb,CAAC;AAACC,EAAA,GAhCIN,MAAM;AAkCZ,eAAeA,MAAM;AAAC,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}